<?php
$exceptionMessage = array();
$namespace = "";
$controllerClassMsg = "";
$exceptionMessage['errorMessage'] = $this->translate('A 404 error occurred');
$exceptionMessage['message'] = $this->message;
if (isset($this->controller) && $this->controller) {
    $classArray = explode("\\", strtolower($this->controller));
    $namespace = $classArray[0];
    $exceptionMessage['controller'] = $this->controller;
    if (isset($this->controller_class) && $this->controller_class && $this->controller_class != $this->controller) {
        $controllerClassMsg .= sprintf($this->translate('resolves to %s'), $this->escapeHtml($this->controller_class));
    }
}

$reasonMessage = '';
if (isset($this->reason) && $this->reason) {
    switch ($this->reason) {
        case 'error-controller-cannot-dispatch':
            $reasonMessage = $this->translate('The requested controller was unable to dispatch the request.');
            break;
        case 'error-controller-not-found':
            $reasonMessage = $this->translate('The requested controller could not be mapped to an existing controller class.');
            break;
        case 'error-controller-invalid':
            $reasonMessage = $this->translate('The requested controller was not dispatchable.');
            break;
        case 'error-router-no-match':
            $reasonMessage = $this->translate('The requested URL could not be matched by routing.');
            break;
        default:
            $reasonMessage = $this->translate('We cannot determine at this time why a 404 was generated.');
            break;
    }
}
$exceptionMessage['controllerClassMsg'] = $controllerClassMsg;
$exceptionMessage['reasonMessage'] = $reasonMessage;
$exceptionMessage['noExceptionMsg'] = $this->translate('No Exception available');
if ($namespace === "application") {
    $jsonMsg = Zend\Json\Json::encode(array(array_values($exceptionMessage)));
    echo $this->partial('api404error', array ('exceptionMessage' => $jsonMsg));
    exit;
} else {
    echo $this->partial('front404error', array ('exceptionMessage' => $exceptionMessage));
} ?>

<?php if (isset($this->display_exceptions) && $this->display_exceptions): ?>
    <?php if (isset($this->exception) && $this->exception instanceof Exception): ?>
        <hr/>
        <h2><?php echo $this->translate('Additional information') ?>:</h2>
        <h3><?php echo get_class($this->exception); ?></h3>
        <dl>
            <dt><?php echo $this->translate('File') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getFile() ?>:<?php echo $this->exception->getLine() ?></pre>
            </dd>
            <dt><?php echo $this->translate('Message') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getMessage() ?></pre>
            </dd>
            <dt><?php echo $this->translate('Stack trace') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getTraceAsString() ?></pre>
            </dd>
        </dl>
        <?php
        $e = $this->exception->getPrevious();
        if ($e) :
            ?>
            <hr/>
            <h2><?php echo $this->translate('Previous exceptions') ?>:</h2>
            <ul class="unstyled">
            <?php while ($e) : ?>
                    <li>
                        <h3><?php echo get_class($e); ?></h3>
                        <dl>
                            <dt><?php echo $this->translate('File') ?>:</dt>
                            <dd>
                                <pre class="prettyprint linenums"><?php echo $e->getFile() ?>:<?php echo $e->getLine() ?></pre>
                            </dd>
                            <dt><?php echo $this->translate('Message') ?>:</dt>
                            <dd>
                                <pre class="prettyprint linenums"><?php echo $e->getMessage() ?></pre>
                            </dd>
                            <dt><?php echo $this->translate('Stack trace') ?>:</dt>
                            <dd>
                                <pre class="prettyprint linenums"><?php echo $e->getTraceAsString() ?></pre>
                            </dd>
                        </dl>
                    </li>
                <?php
                $e = $e->getPrevious();
            endwhile;
            ?>
            </ul>
            <?php endif; ?>

    <?php else: ?>

        <h3><?php echo $noExceptionMsg ?></h3>

    <?php endif ?>

    <?php endif ?>
